# LeetCode-BinaryTree
二叉树
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode constructFromPrePost(int[] pre, int[] post) {
        if (pre.length == 0 || post.length == 0) {
            return null;
        }
        if (pre.length == 1 && post.length == 1) {
            return new TreeNode(post[0]);
        }
        int len = post.length;
        int rootVal = post[len - 1];
        TreeNode root = new TreeNode(rootVal);
        int rightVal = post[len - 1 - 1];
        int i = 0;
        for (; i < pre.length; i++) {
            if (pre[i] == rightVal) {
                break;
            }
        }
        int pos = len - 1 - (pre.length - i);
        root.right = constructFromPrePost(Arrays.copyOfRange(pre, i, pre.length),
        Arrays.copyOfRange(post, pos, len - 1));
        root.left = constructFromPrePost(Arrays.copyOfRange(pre, 1, i),
        Arrays.copyOfRange(post, 0, pos));
        return root;
    }
}
